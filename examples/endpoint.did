type HttpHeader = record { value : text; name : text };
type HttpResponse = record {
  status : nat;
  body : vec nat8;
  headers : vec HttpHeader;
};
type Registered = record { chain_id : nat64; api_provider : text };
type Result = variant { Ok : text; Err : text };
type RpcTarget = variant { UrlWithApiKey : text; Registered : Registered };
type TransformArgs = record { context : vec nat8; response : HttpResponse };
service : () -> {
  add_controller : (principal) -> ();
  json_rpc : (text, opt nat64, RpcTarget) -> (Result);
  register_api_key : (nat64, text, text) -> ();
  registrations : () -> (vec Registered) query;
  transform : (TransformArgs) -> (HttpResponse) query;
}